#!/bin/bash
#inkVerbRunner! verb.ink

# This is the master command to add a new VPS, complete with all requirements

# How to use:
## ./addvps [verb-namespace] [tld] [user] [vultr-plan (1gb shortcut for lowest, 2gb shortcut for second-lowest: vc2-1c-2gb)] [snapshot-nickname] [vultr-region - optional] [PHP-timezone - optional] [mail path - optional] [hostname - optional] [update repo - optional, default is verb-update] [update GitHub org - optional, default is inkverb] [nameserverpair - optional; placeholder: "-"] [ -o if listing verb tlds to turn of after]

## If specifying later arguments, but not earlier options, use dash `-`
### This is for vultr-region, PHP-timezone, mail path, and hostname
## If you don't specify the hostname, auto-incremented numbers are used for the host
### Custom mail path is preferred and the web UI should ask for this at creation
### The auto-host naming is preferred and should be mandatory when managed through a web UI
### Specifying a custom host name is only for verbers not managed or accessible from the web UI

# Eg:
## ./addvps name ink someuser 1gb laemp ord America/Chicago
## ./addvps name ink someuser 1gb laemp dfw America/Chicago
## ./addvps name ink someuser 2gb laemp ewr America/New_York
## ./addvps name ink someuser 1gb laemp yto America/Toronto
## ./addvps name ink someuser 1gb laemp itm Asia/Tokyo
## ./addvps name ink someuser 2gb laemp nrt Asia/Tokyo
## ./addvps name ink someuser 1gb laemp sgp Asia/Singapore emailhere
## ./addvps john ink otheruser 1gb laemp lax America/Los_Angeles inboxword
## ./addvps nick red billuser vc2-1c-2gb laemp - - somepath
## ./addvps nick vip billuser vc2-1c-2gb laemp sjc America/Los_Angeles - - verb-update inkverb
## ./addvps nick vip billuser vc2-1c-2gb laemp - - mailpath verb-update inkverb
## ./addvps nick vip billuser vc2-1c-2gb laemp - - - - verb-update inkverb ink red
## ./addvps nick vip billuser vc2-1c-2gb laemp sea America/Los_Angeles mailpath namedhost verb-update inkverb - -o kiwi
## ./addvps nick vip billuser vc2-1c-2gb laemp sea America/Los_Angeles - namedhost verb-update inkverb
## ./addvps nick vip billuser vc2-1c-2gb laemp sea America/Los_Angeles mailpath - verb-update inkverb ns3ns4 -o ink blue red
## ./addvps name ink someuser --import s0mElong-An6Cr7z3-ID


if [ -z "$5" ]; then
  /usr/bin/echo "Needs namespace, TLD, user, plan, & snapshot arguments, I quit."
  exit 0
fi

# Get our Rink-NS name settings
. /opt/rink/rinknames

namespace="$1"
VerbTLD="$2"
vuser="$3"

# Import or new VPS?
if [ "${4}" = "--import" ]; then
  IMPort="true"
  VultrInstanceID="$5"
else
  IMPort="false"
  vultrplan="$4"
  snapnick="$5"
  if [ -n "$6" ] && [ "$6" != "-" ] && /usr/bin/vultr-cli regions list | /usr/bin/grep -q "^$6"; then
    VultrRegion="$6" # Overrides region from rinknames
  else
    /usr/bin/echo "Using default region ${VultrRegion}"
  fi
  if [ -n "$7" ] && [ "$6" != "-" ] && /usr/bin/grep -q "^$7" /opt/verb/ink/PHPcities; then
    TimeZone="$7" # Overrides timezone from rinknames
  else
    /usr/bin/echo "Using default timezone ${TimeZone}"
  fi
  if [ -n "$8" ] && [ "$8" != "-" ]; then
    MailPath="$8"
  fi
  if [ -n "$9" ] && [ "$9" != "-" ]; then
    hostname="$9"
  else
    hostname=""
  fi
  if [ -n "${10}" ]; then
    UpdateRepo="${10}" # Overrides update repo from rinknames
  else
    UpdateRepo=""
  fi
  if [ -n "${11}" ]; then
    UpdateOrg="${11}" # Overrides update org from rinknames
  else
    UpdateOrg=""
  fi
  if [ -n "${12}" ] && [ "${12}" != "-" ]; then
    OverrideVerbNameServersConfig="${12}"
    # Now you can use this: if [ -n "${OverrideVerbNameServersConfig}" ]; then VerbNameServersConfig="${OverrideVerbNameServersConfig}"; fi
  fi
   # Turn off certain verb domains?
  if [ "${13}" = "-o" ]; then
    verboff=true
    shift 13
  fi
fi

. /opt/rink/portnum # for Port

# New instances only: Create
if [ "$IMPort" != "true" ]; then
  # Create the VPS
  if [ ! -f "/opt/rink/conf/verbers/${namespace}.${VerbTLD}.raw" ]; then
    /opt/rink/run/newvps "${namespace}" "${VerbTLD}" "${vuser}" "${vultrplan}" "${snapnick}" "${VultrRegion}" "${TimeZone}" "${hostname}"
    e="$?"; [[ "$e" = "0" ]] || echo "VPS setup failed!"; exit "$e"
  fi

  # Check if finished right
  if [ -f "/opt/rink/conf/verbers/${namespace}.${VerbTLD}.raw" ]; then
    if [ -f "/opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb" ]; then
      . /opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb
      if [ -n "${OverrideVerbNameServersConfig}" ]; then VerbNameServersConfig="${OverrideVerbNameServersConfig}"; fi
      . /opt/rink/ns/${VerbNameServersConfig}
    else
      VultrInstanceID="$(/usr/bin/cat /opt/rink/conf/verbers/${namespace}.${VerbTLD}.raw | /usr/bin/grep ^ID | /usr/bin/sed s"/ID\t\t\t//")"
    fi
    if ! /usr/bin/grep -q ^VerbIPv4 /opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb || ! /usr/bin/grep -q "${VerbIPv4}" /opt/rink/conf/verbers/${namespace}.${VerbTLD}.ssh; then
      /usr/bin/echo "Verber was not created correctly. Run this again to try again."
      /usr/bin/echo "Waiting to delete instance..."
      /opt/rink/run/waitvpson ${namespace} ${VerbTLD}
      /usr/bin/vultr-cli instance delete ${VultrInstanceID}
      datestamp="$(/usr/bin/date +%Y-%m-%d_%T)"
      /usr/bin/mv /opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb /opt/rink/conf/verbers.destroyed/${vuser}.${namespace}.${VerbTLD}.${datestamp}.vrb
      /usr/bin/mv /opt/rink/conf/verbers/${namespace}.${VerbTLD}.raw /opt/rink/conf/verbers.destroyed/${vuser}.${namespace}.${VerbTLD}.${datestamp}.raw
      /usr/bin/rm -f /opt/rink/conf/verbers/${namespace}.${VerbTLD}.ssh
      /usr/bin/sed -i "/${namespace}.${VerbTLD}.ssh/d" /root/.ssh/config
      exit 0
    fi
  else
    /usr/bin/echo "Verber did not produce raw output correctly. Run this again to try again."
    exit 0
  fi

  # Wait for powerup (waiting for restart from newvps) and for a bonafide response
  /opt/rink/run/waitvpson ${namespace} ${VerbTLD}
  /opt/rink/run/waitvpsanswer ${namespace} ${VerbTLD}

# Importing instance only
elif [ "$IMPort" = "true" ]; then
  /opt/rink/run/importvps "$namespace" "$VerbTLD" "$vuser" "$VultrInstanceID"
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
fi

# Add the SSH key to known_hosts
#DEV keyscan is a native part of newvps
# if ! /usr/bin/grep -q '^Keyscan="DONE"' "/opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb"; then
#   /opt/rink/run/keyscan ${namespace} ${VerbTLD}
#   wait
# fi

# List the new verb namespace on this NS server
#DEV This was an older method in alpha stages
#DEV The new methods has the verber list itself with rink* serfs
#DEV Delete this and the listdns runner if everything works
#/opt/rink/run/listdns ${namespace} ${VerbTLD}

# Create new SSH keys on the new verber and install their pub keys on the NS servers
## This must go before verb/inst/setup or the server will deny access in post-setup ssh calls
/usr/bin/echo "Up and running, now creating new keys..."
if ! /usr/bin/grep -q '^RinkKeys="DONE"' "/opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb"; then
  /opt/rink/run/newverbrinkkeys ${namespace} ${VerbTLD} ${vuser}
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
fi

# New instances only: setup
if [ "$IMPort" != "true" ]; then
  # Turn off certain verb domains?
  if [ -n "$verboff" ] && [ "$verboff" = "true" ]; then
    for $vdom in $@; do
      /usr/bin/ssh ${namespace}.${VerbTLD} /opt/verb/inst/preverboff $vdom
    done
  fi

  # Setup
  . /opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb
  if [ -n "${OverrideVerbNameServersConfig}" ]; then VerbNameServersConfig="${OverrideVerbNameServersConfig}"; fi
  . /opt/rink/ns/${VerbNameServersConfig}
  if ! /usr/bin/grep -q '^SetupVerber="DONE"' "/opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb"; then

    ## Site URIlist
    . /opt/verb/conf/siteurilist # Only for $hostURI of this rink
    
    ## Domain mod? (ALPHA)
    if [ -f "/opt/verb/inst/domain.mod.conf" ]; then #DEV the domain mod has not yet been tested for Rink management
      . /opt/verb/inst/domain.mod.conf
      /usr/bin/ssh ${namespace}.${VerbTLD} /opt/verb/serfs/make-dommod ${VerbHostID} ${DModBase}
    fi

    ## Permanently set to current nameservers
    /usr/bin/cat /opt/rink/inkdnsnameservers | /usr/bin/ssh ${namespace}.${VerbTLD} "/usr/bin/cat > /opt/verb/conf/inklists/inkdnsnameservers"
    /usr/bin/ssh ${namespace}.${VerbTLD} /usr/bin/echo 'CustomNS="true"' >> /opt/verb/conf/inklists/inkdnsnameservers

    ## Run setup
    /usr/bin/echo "Setting-up the VPS to know its name..."
    /usr/bin/ssh ${namespace}.${VerbTLD} /opt/verb/serfs/setup ${namespace} ink email vip ${VerbHostID} ${VerbIPv4} ${VerbIPv6} cb@${RinkDomain} 100 1000 ${TimeZone} ${Port} boss "$(/usr/bin/pwgen -s -1 16)" ${UpdateRepo} ${UpdateOrg}
       
    e="$?"; [[ "$e" = "0" ]] || exit "$e"
    if [ "$?" = "0" ]; then
      /usr/bin/echo 'SetupVerber="DONE"' >> /opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb
    fi

    # Keyscan again
    /opt/rink/run/keyscan ${namespace} ${VerbTLD}
  fi

  # Wait for sshd to reload (from the end of setup)
  /usr/bin/sleep 3
  /opt/rink/run/waitvpsanswer ${namespace} ${VerbTLD}
fi

# Update to latest NS servers
/usr/bin/echo "Informing the network of the new VPS presence..."
if ! /usr/bin/grep -q 'RinkKeys="DONE"' "/opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb"; then
  /usr/bin/ssh ${namespace}.${VerbTLD} /opt/verb/serfs/rinkupdatekeys
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
fi
if ! /usr/bin/grep -q 'RinkVerbsNSListed="DONE"' "/opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb"; then
  /usr/bin/ssh ${namespace}.${VerbTLD} /opt/verb/serfs/rinkupdateallverbs
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
  if [ "$?" = "0" ]; then
    /usr/bin/echo 'RinkVerbsNSListed="DONE"' >> /opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb
  fi
fi

# Verber info
/usr/bin/echo "Noting the VPS settings in our records..."
/usr/bin/echo "# servernameip" > /opt/rink/conf/verbers/${namespace}.${VerbTLD}.srv
/usr/bin/ssh ${namespace}.${VerbTLD} "/usr/bin/cat /opt/verb/conf/servernameip" >> /opt/rink/conf/verbers/${namespace}.${VerbTLD}.srv
/usr/bin/echo "# siteurlist" >> /opt/rink/conf/verbers/${namespace}.${VerbTLD}.srv
/usr/bin/ssh ${namespace}.${VerbTLD} "/usr/bin/cat /opt/verb/conf/siteurilist" >> /opt/rink/conf/verbers/${namespace}.${VerbTLD}.srv

# PTR records with the hosting service
. /opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb
. /opt/rink/conf/verbers/${namespace}.${VerbTLD}.srv
/usr/bin/vultr-cli instance reverse-dns set-ipv4 "${VultrInstanceID}" -e "${hostURI}" -i "${ServerIPv4}"
/usr/bin/vultr-cli instance reverse-dns set-ipv6 "${VultrInstanceID}" -e "${hostURI}" -i "${ServerExpIPv6}"

# Restart the new Verber
/usr/bin/echo "Rebooting the VPS..."
/usr/bin/ssh ${namespace}.${VerbTLD} /usr/bin/reboot

# Refresh Bind on NS servers
/usr/bin/echo "Refreshing nameservers..."
/opt/rink/run/waitvpson ${namespace} ${VerbTLD}
/opt/rink/run/waitvpsanswer ${namespace} ${VerbTLD}
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsrefreshbind
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsrefreshbind

# inkVmail initiated?
if [ -n "${MailPath}" ]; then
  /usr/bin/echo "Installing mail server..."
  /usr/bin/ssh ${namespace}.${VerbTLD} /opt/verb/serfs/installinkvmail ${MailPath}
  /usr/bin/echo "When DNS listings finish populating, inkCert should obtain SSL certs automatically.
If not, manually run inkCert for verb domains ('ink cert do -ma' or 'serfs/inkcertdole-all-verbs')"
fi
