#!/bin/bash
#inkVerbRunner! verb.ink

# This sends an ssh command an existing Vultr VPS, based on Verber namespace and TLD

# How to use:
## ./sshrun [ verb-namespace ] [ tld ] [ user ] [ BASH command - optional ]

# Eg:
## ./sshrun name ink john some long bash command
## ./sshrun name ink john 'some command && next command'
## ./sshrun name ink john "some command && next command"


if [ -z "$3" ]; then
  /usr/bin/echo "Needs namespace, TLD & user arguments, I quit."
  exit 0
fi

namespace="$1"
VerbTLD="$2"
vuser="$3"
shift 3

if [ ! -f "/opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb" ]; then
  /usr/bin/echo "${namespace}.${VerbTLD} does not exist! I quit."
  exit 0
fi

if ! grep -q "VerbUser=\"$vuser\"" "/opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb"; then
  /usr/bin/echo "${namespace}.${VerbTLD} not owned by user ${vuser}! I quit."
  exit 0
fi

if ! grep -q "Include /opt/rink/conf/verbers/${namespace}.${VerbTLD}.ssh" /root/.ssh/config; then
  /usr/bin/echo "Something is wrong. ${namespace}.${VerbTLD} config exists, but the entry is not made in the SSH config! I quit."
  exit 0
fi

. /opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb
. /opt/rink/ns/${VerbNameServersConfig}

#DEV these keys should already be accepted
# if [ -z "${FIRSTSSH}" ]; then
#   /usr/bin/ssh -o StrictHostKeyChecking=accept-new ${namespace}.${VerbTLD} /usr/bin/cat /etc/ssh/ssh_host_dsa_key.pub >> /root/.ssh/known_hosts
#   if [ "$?" = "0" ]; then
#     /usr/bin/echo "FIRSTSSH=\"true\"" >> /opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb
#   fi
# fi

# Run the actual command
/usr/bin/ssh -o StrictHostKeyChecking=yes ${namespace}.${VerbTLD} $*
