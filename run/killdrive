#!/bin/bash
#inkVerbRunner! verb.ink

# This checks and kills a drive once it is no longer connected to a VPS

# How to use:
## ./killdrive [verb-namespace] [tld] [user] [drive-nickname]

# Eg:
## ./killdrive name ink someuser twentyhard
## ./killdrive blink ink johnuser tensolid

# Get our Rink-NS name settings
. /opt/rink/rinknames

namespace="$1"
VerbTLD="$2"
vuser="$3"
drivenickname="$4"

# Credential checks
if [ -z "${4}" ]; then
  /usr/bin/echo "Enter all credentials; read instructions."
  exit 5
fi

if [ ! -f "/opt/rink/conf/${namespace}.${VerbTLD}.vrb" ]; then
  /usr/bin/echo "${namespace}.${VerbTLD} does not exist! I quit."
  exit 5
fi

if [ ! -f "/opt/rink/drive/${drivenickname}.${vuser}.drive" ]; then
  /usr/bin/echo "No drive exists by this nickname for this user. Nothing to do."
  exit 5
fi

# Check verber config
if ! grep -q "VerbUser=\"${vuser}\"" "/opt/rink/conf/${namespace}.${VerbTLD}.vrb"; then
  /usr/bin/echo "${namespace}.${VerbTLD} not owned by user ${vuser}! I quit."
  exit 5
else
  . "/opt/rink/conf/${namespace}.${VerbTLD}.vrb"
fi

if ! grep -q "DriveDev=\"UNPLUGGED\"" "/opt/rink/drive/${drivenickname}.${vuser}.drive"; then
  /usr/bin/echo "Drive ${drivenickname} isn't unplugged yet! I quit."
  exit 5
else
  . "/opt/rink/drive/${drivenickname}.${vuser}.drive"
fi

if ! grep -q "DriveNickName=\"${drivenickname}\"" "/opt/rink/drive/${drivenickname}.${vuser}.drive"; then
  /usr/bin/echo "Drive ${drivenickname} nickname doesn't match up! Something is very wrong."
  exit 6
fi

# Check verber config
if ! grep -q "VerbUser=\"$vuser\"" "/opt/rink/conf/${namespace}.${VerbTLD}.vrb"; then
  /usr/bin/echo "${namespace}.${VerbTLD} not owned by user ${vuser}! I quit."
  exit 5
else
  . /opt/rink/conf/${namespace}.${VerbTLD}.vrb
fi

# DEV available variables
# ${DriveID}
# ${DriveNickName}
# ${DriveVerber} # Most recent connected drive
# ${DriveName}
# ${DriveType}
# ${DriveSize}
# ${DriveRegion}
# ${DriveDev}

# Check if drive is attached
if /usr/bin/vultr-cli bs g ${DriveID} | /usr/bin/grep -q "${VultrInstanceID}"; then
  /usr/bin/echo "Somehow drive ${DriveNickName} is still pulgged into its old verber. Something is very wrong!"
  exit 6
else
  # Make sure it is not attached so that the delete will work, even if somehow it got attached
  /usr/bin/vultr-cli bs detach ${DriveID}
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
fi

# Delete the drive
/usr/bin/vultr-cli bs delete ${DriveID}
e="$?"; [[ "$e" = "0" ]] || exit "$e"

# Mount the drive on the verber
/usr/bin/ssh ${namespace}.${VerbTLD} /opt/verb/serfs/inkdriveadd ${DriveDev} ${DriveName} ${DriveType}
e="$?"; [[ "$e" = "0" ]] || exit "$e"

# Records
datestamp="$(/usr/bin/date +%Y-%m-%d_%T)"
/usr/bin/mv /opt/rink/drive/${DriveNickName}.${vuser}.drive /opt/rink/smashed/${vuser}.${DriveNickName}.${datestamp}.drive
/usr/bin/mv /opt/rink/drive/${DriveNickName}.${vuser}.raw /opt/rink/smashed/${vuser}.${DriveNickName}.${datestamp}.raw
/usr/bin/mv /opt/rink/drive/${DriveNickName}.${vuser}.line /opt/rink/smashed/${vuser}.${DriveNickName}.${datestamp}.line

# Finish
/usr/bin/echo "Drive ${DriveNickName} permanently deleted."
