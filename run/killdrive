#!/bin/bash
#inkVerbRunner! verb.ink

# This checks and kills a drive once it is no longer connected to a VPS
## The drive must be unplugged first, even if the VPS it was attached to is destroyed (it can still be unplugged)

# How to use:
## ./killdrive [user] [drive-nickname]

# Eg:
## ./killdrive someuser twentyhard
## ./killdrive johnuser tensolid

# Get our Rink-NS name settings
. /opt/rink/rinknames

vuser="$1"
drivenickname="$2"

# Credential checks
if [ -z "${2}" ]; then
  /usr/bin/echo "Enter all credentials; read instructions."
  exit 5
fi

if [ ! -f "/opt/rink/conf/drives/${drivenickname}.${vuser}.drive" ]; then
  /usr/bin/echo "Drive does not exist for this user! I quit."
  exit 5
else
  . "/opt/rink/conf/drives/${drivenickname}.${vuser}.drive"
fi

if ! /usr/bin/grep -q "DriveDev=\"UNPLUGGED\"" "/opt/rink/conf/drives/${drivenickname}.${vuser}.drive"; then
  /usr/bin/echo "Drive ${drivenickname} isn't unplugged yet! I quit."
  exit 5
fi

if ! /usr/bin/grep -q "DriveNickName=\"${drivenickname}\"" "/opt/rink/conf/drives/${drivenickname}.${vuser}.drive"; then
  /usr/bin/echo "Drive ${drivenickname} nickname doesn't match up! Something is very wrong."
  exit 6
fi

# DEV available variables
# ${DriveID}
# ${DriveNickName}
# ${DriveVerber} # Most recent connected drive
# ${DriveName}
# ${DriveType}
# ${DriveSize}
# ${DriveRegion}
# ${DriveDev}

# Delete the drive
/usr/bin/vultr-cli bs delete ${DriveID}
e="$?"; [[ "$e" = "0" ]] || exit "$e"

# Records
datestamp="$(/usr/bin/date +%Y-%m-%d_%T)"
/usr/bin/mv /opt/rink/conf/drives/${DriveNickName}.${vuser}.drive /opt/rink/conf/drives.smashed/${vuser}.${DriveNickName}.${datestamp}.drive
/usr/bin/mv /opt/rink/conf/drives/${DriveNickName}.${vuser}.raw /opt/rink/conf/drives.smashed/${vuser}.${DriveNickName}.${datestamp}.raw

# Finish
/usr/bin/echo "Drive ${DriveNickName} permanently deleted."
