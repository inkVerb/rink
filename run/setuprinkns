#!/bin/bash
#inkVerbRunner! verb.ink

# This creates and connects this Rink with the two main NS servers
## Prerequesite: setrinknames, setkey, setport, setsnapshot, setup
## Prerequesite: setup must NOT be run yet!
## This runs setup for all three servers, including this one

# How to use:
## ./setuprinkns


if [ ! -f "/opt/rink/rinknames" ]; then
  echo "Must run setrinknames first"
  exit 0
fi

if [ -f "/opt/rink/.configured" ]; then
  echo "Already configured, you'll need to hack some to run this again"
  exit 0
fi

# Configs
. /opt/rink/rinknames
. /opt/rink/ns/${NameServersConfig}
. /opt/rink/portnum

# In progress or from start?
if [ ! -f "/opt/rink/waitnsfinish" ]; then
  # Run setup files, checking progress at each step of the way
  if [ -f "/opt/verb/inst/make-dns" ]; then
    /opt/verb/inst/make-dns ${RinkHost} ${RinkDomain}; fi
  if [ -f "/opt/verb/inst/setup" ]; then
    /opt/verb/inst/setup ${RinkName} ${RinkVerbTLD} email vip ${RinkHost} ${RinkIPv4} ${RinkIPv6} cb@${RinkDomain} 100 1000 ${TimeZone} ${Port} boss "$(/usr/bin/pwgen -s -1 16)" ${UpdateRepo} ${UpdateOrg};fi
  # Create the NS nameservers
  if [ ! -f "/opt/rink/conf/${NS1Name}.${RinkVerbTLD}.vrb" ]; then
  /opt/rink/run/newvps ${NS1Name} ${RinkVerbTLD} byrink 1gb ${DfaultNSSnapshotID} ${VultrRegion1}; fi
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
  # Check if finished right
  if ! /usr/bin/grep -q ^VerbIPv4 /opt/rink/conf/${NS1Name}.${RinkVerbTLD}.vrb; then
    /usr/bin/echo "NS1 was not created correctly. Run this again to try again."
    /usr/bin/rm -f "${NS1Name}.${RinkVerbTLD}.*"
    /usr/bin/sed -i "/${NS1Name}.${RinkVerbTLD}.ssh/d" /root/.ssh/config
    exit 0; fi
  if [ ! -f "/opt/rink/conf/${NS2Name}.${RinkVerbTLD}.vrb" ]; then
  /opt/rink/run/newvps ${NS2Name} ${RinkVerbTLD} byrink 1gb ${DfaultNSSnapshotID} ${VultrRegion2}; fi
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
  # Check if finished right
  if ! /usr/bin/grep -q ^VerbIPv4 /opt/rink/conf/${NS2Name}.${RinkVerbTLD}.vrb; then
    /usr/bin/echo "NS2 was not created correctly. Run this again to try again."
    /usr/bin/rm -f "${NS2Name}.${RinkVerbTLD}.*"
    /usr/bin/sed -i "/${NS2Name}.${RinkVerbTLD}.ssh/d" /root/.ssh/config
    exit 0; fi
  # Wait for servers to finish
  /usr/bin/touch /opt/rink/waitnsfinish
  /usr/bin/echo "Waiting for NS servers to finish creation; re-run this script if it times-out to continue from this stage"
fi

# Rink config (now we know its ready)
. /opt/verb/conf/servernameip

# NS1
if [ ! -f "/opt/rink/ns1done" ]; then
## Try to add keys until added
  . /opt/rink/conf/${NS1Name}.${RinkVerbTLD}.vrb
  ### Wait for powerup
  /opt/rink/run/waitvpson ${NS1Name} ${RinkVerbTLD}
  #DEV keyscan is a native part of newvps
  # while [ ! -f "/opt/rink/ns1added" ]; do
  #   /opt/rink/run/keyscan ${namespace} ${VerbTLD}
  #   #/usr/bin/ssh-keyscan -H -p ${VerbPort} ${VerbIPv4} >> /root/.ssh/known_hosts
  #   wait
  #   if [ "$?" != "0" ]; then
  #     /usr/bin/sleep 1
  #   else
  #     /usr/bin/touch /opt/rink/ns1added
  #   fi
  # done
  ## Setup
  /usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/inst/make-dns ${NS1Host} ${RinkDomain}
  wait
  /usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/setup ${NS1Name} ${RinkVerbTLD} email vip ${NS1Host} ${VerbIPv4} ${VerbIPv6} cb@${RinkDomain} 100 1000 ${TimeZone1} ${VerbPort} boss "$(/usr/bin/pwgen -s -1 16)" ${UpdateRepo} ${UpdateOrg}
  wait
  if [ "$?" = "0" ]; then
    /usr/bin/touch /opt/rink/ns1done
  else
    /usr/bin/echo "NS1 can't run setup"
    exit 0
  fi
fi

# NS2
if [ ! -f "/opt/rink/ns2done" ]; then
  ## Try to add keys until added
  . /opt/rink/conf/${NS2Name}.${RinkVerbTLD}.vrb
  ### Wait for powerup
  /opt/rink/run/waitvpson ${NS2Name} ${RinkVerbTLD}
  #DEV keyscan is a native part of newvps
  # while [ ! -f "/opt/rink/ns2added" ]; do
  #   /opt/rink/run/keyscan ${namespace} ${VerbTLD}
  #   #/usr/bin/ssh-keyscan -H -p ${VerbPort} ${VerbIPv4} >> /root/.ssh/known_hosts
  #   wait
  #   if [ "$?" != "0" ]; then
  #     /usr/bin/sleep 1
  #   else
  #     /usr/bin/touch /opt/rink/ns2added
  #   fi
  # done
  ## Setup
  /usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/inst/make-dns ${NS2Host} ${RinkDomain}
  wait
  /usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/setup ${NS2Name} ${RinkVerbTLD} email vip ${NS2Host} ${VerbIPv4} ${VerbIPv6} cb@${RinkDomain} 100 1000 ${TimeZone2} ${VerbPort} boss "$(/usr/bin/pwgen -s -1 16)" ${UpdateRepo} ${UpdateOrg}
  wait
  if [ "$?" = "0" ]; then
    /usr/bin/touch /opt/rink/ns2done
  else
    /usr/bin/echo "NS2 can't run setup"
    exit 0
  fi
fi

# Update our global NS nameservers
. /opt/rink/conf/${NS1Name}.${RinkVerbTLD}.vrb
NS1ip4="$VerbIPv4"
NS1ip6="$VerbIPv6"
. /opt/rink/conf/${NS2Name}.${RinkVerbTLD}.vrb
NS2ip4="$VerbIPv4"
NS2ip6="$VerbIPv6"
## Point the NS servers to each other
### NS1
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnssetns1 "${NS2Host}.${RinkDomain}" "${NS2ip4}" "${NS2ip6}"
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnssetns2 "${RinkHost}.${RinkDomain}" "${RinkIPv4}" "${RinkIPv6}"
### NS2
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnssetns1 "${NS1Host}.${RinkDomain}" "${NS1ip4}" "${NS1ip6}"
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnssetns2 "${RinkHost}.${RinkDomain}" "${RinkIPv4}" "${RinkIPv6}"
### This nameserver uses the normal other two, but must be set manually because it is a NS server via make-dns
/opt/verb/serfs/inkdnssetns1 "${NS1Host}.${RinkDomain}" "${NS1ip4}" "${NS1ip6}"
/opt/verb/serfs/inkdnssetns2 "${NS2Host}.${RinkDomain}" "${NS2ip4}" "${NS2ip6}"

# Install DNS & Certs that DNS servers skip in setup
## Rink
/opt/verb/serfs/inkdnsinstall; wait
/opt/verb/serfs/inkcertinstall; wait
/opt/verb/serfs/setsecure; wait
## NS1
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsinstall; wait
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkcertinstall; wait
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/setsecure; wait
## NS2
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsinstall; wait
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkcertinstall; wait
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/setsecure; wait
## Servers up?
/opt/rink/run/waitvpsanswer ${NS1Name} ${VerbTLD}
/opt/rink/run/waitvpsanswer ${NS2Name} ${VerbTLD}

# Notification
/usr/bin/echo "Disabling the DNS service, you may see some error messages during setup which can be ignored..."

# Site URIlist
. /opt/verb/conf/siteurilist # Only for $hostURI
if [ -f "/opt/verb/inst/domain.mod.conf" ]; then
  . /opt/verb/inst/domain.mod.conf
  emailBASE="email.${DModBase}"
  oneBASE="one.${DModBase}"
  inkBASE="ink.${DModBase}"
  blueBASE="blue.${DModBase}"
  vipBASE="vip.${DModBase}"
  kiwiBASE="kiwi.${DModBase}"
  redBASE="red.${DModBase}"
else
  emailBASE="verb.email"
  oneBASE="verb.one"
  inkBASE="verb.ink"
  blueBASE="verb.blue"
  vipBASE="verb.vip"
  kiwiBASE="verb.kiwi"
  redBASE="verb.red"
fi

# Host Rink verb.tld list on all three NS servers

## Dirs used by inkdnsaddslave
### Rink on NS1
/usr/bin/ssh -T ${NS1Name}.${RinkVerbTLD} <<EOS
/usr/bin/mkdir -p /srv/sns/killed /srv/sns/${RinkName}-${RinkVerbTLD}/domains
/usr/bin/cat <<EOF > /srv/sns/${RinkName}-${RinkVerbTLD}/conf
VerbHostID="${ServerHost}"
VerbName="${ServerName}"
VerbTLD="${ServerTLD}"
VerbIPv4="${ServerIPv4}"
VerbIPv6="${ServerIPv6}"
VerbIPv6Exp="${ServerExpIPv6}"
VerbARPAIPv4="${ServerARPAIPv4}"
VerbARPAIPv6="${ServerARPAIPv6}"
EOF
EOS
### NS2 on NS1
. /opt/rink/conf/${NS2Name}.${RinkVerbTLD}.vrb
/usr/bin/ssh -T ${NS1Name}.${RinkVerbTLD} <<EOS
/usr/bin/mkdir -p /srv/sns/killed /srv/sns/${NS2Name}-${RinkVerbTLD}/domains
/usr/bin/cat <<EOF > /srv/sns/${NS2Name}-${RinkVerbTLD}/conf
VerbHostID="${VerbHostID}"
VerbName="${VerbName}"
VerbTLD="${VerbTLD}"
VerbIPv4="${VerbIPv4}"
VerbIPv6="${VerbIPv6}"
VerbIPv6Exp="${VerbIPv6Exp}"
VerbARPAIPv4="${VerbARPAIPv4}"
VerbARPAIPv6="${VerbARPAIPv6}"
EOF
EOS
### Rink on NS2
/usr/bin/ssh -T ${NS2Name}.${RinkVerbTLD} <<EOS
/usr/bin/mkdir -p /srv/sns/${RinkName}-${RinkVerbTLD}/domains /srv/sns/${RinkName}-${RinkVerbTLD}/calls
/usr/bin/cat <<EOF > /srv/sns/${RinkName}-${RinkVerbTLD}/conf
VerbHostID="${ServerHost}"
VerbName="${ServerName}"
VerbTLD="${ServerTLD}"
VerbIPv4="${ServerIPv4}"
VerbIPv6="${ServerIPv6}"
VerbIPv6Exp="${ServerExpIPv6}"
VerbARPAIPv4="${ServerARPAIPv4}"
VerbARPAIPv6="${ServerARPAIPv6}"
EOF
EOS
### NS1 on NS2
. /opt/rink/conf/${NS1Name}.${RinkVerbTLD}.vrb
/usr/bin/ssh -T ${NS2Name}.${RinkVerbTLD} <<EOS
/usr/bin/mkdir -p /srv/sns/${NS1Name}-${RinkVerbTLD}/domains /srv/sns/${NS1Name}-${RinkVerbTLD}/calls
/usr/bin/cat <<EOF > /srv/sns/${NS1Name}-${RinkVerbTLD}/conf
VerbHostID="${VerbHostID}"
VerbName="${VerbName}"
VerbTLD="${VerbTLD}"
VerbIPv4="${VerbIPv4}"
VerbIPv6="${VerbIPv6}"
VerbIPv6Exp="${VerbIPv6Exp}"
VerbARPAIPv4="${VerbARPAIPv4}"
VerbARPAIPv6="${VerbARPAIPv6}"
EOF
EOS
### NS1 on this local Rink
. /opt/rink/conf/${NS1Name}.${RinkVerbTLD}.vrb
/usr/bin/mkdir -p /srv/sns/${NS1Name}-${RinkVerbTLD}/domains /srv/sns/${NS1Name}-${RinkVerbTLD}/calls
/usr/bin/cat <<EOF > /srv/sns/${NS1Name}-${RinkVerbTLD}/conf
VerbHostID="${VerbHostID}"
VerbName="${VerbName}"
VerbTLD="${VerbTLD}"
VerbIPv4="${VerbIPv4}"
VerbIPv6="${VerbIPv6}"
VerbIPv6Exp="${VerbIPv6Exp}"
VerbARPAIPv4="${VerbARPAIPv4}"
VerbARPAIPv6="${VerbARPAIPv6}"
EOF
### NS2 on this local Rink
. /opt/rink/conf/${NS2Name}.${RinkVerbTLD}.vrb
/usr/bin/mkdir -p /srv/sns/${NS2Name}-${RinkVerbTLD}/domains /srv/sns/${NS2Name}-${RinkVerbTLD}/calls
/usr/bin/cat <<EOF > /srv/sns/${NS2Name}-${RinkVerbTLD}/conf
VerbHostID="${VerbHostID}"
VerbName="${VerbName}"
VerbTLD="${VerbTLD}"
VerbIPv4="${VerbIPv4}"
VerbIPv6="${VerbIPv6}"
VerbIPv6Exp="${VerbIPv6Exp}"
VerbARPAIPv4="${VerbARPAIPv4}"
VerbARPAIPv6="${VerbARPAIPv6}"
EOF

## Configs
### Fetch from all
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /usr/bin/cat /opt/verb/conf/servertldstatus > /opt/rink/tmp/servertldstatus_${NS1Name}_${RinkVerbTLD}
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /usr/bin/cat /opt/verb/conf/servertldstatus > /opt/rink/tmp/servertldstatus_${NS2Name}_${RinkVerbTLD}
/usr/bin/cat /opt/verb/conf/servertldstatus > /opt/rink/tmp/servertldstatus_${RinkName}_${RinkVerbTLD}
### Write to all
/usr/bin/cat /opt/rink/tmp/servertldstatus_${NS2Name}_${RinkVerbTLD} | /usr/bin/ssh ${NS1Name}.${RinkVerbTLD} "/usr/bin/cat > /srv/sns/${NS2Name}-${RinkVerbTLD}/servertldstatus"
/usr/bin/cat /opt/rink/tmp/servertldstatus_${RinkName}_${RinkVerbTLD} | /usr/bin/ssh ${NS1Name}.${RinkVerbTLD} "/usr/bin/cat > /srv/sns/${RinkName}-${RinkVerbTLD}/servertldstatus"
/usr/bin/cat /opt/rink/tmp/servertldstatus_${NS1Name}_${RinkVerbTLD} | /usr/bin/ssh ${NS2Name}.${RinkVerbTLD} "/usr/bin/cat > /srv/sns/${NS1Name}-${RinkVerbTLD}/servertldstatus"
/usr/bin/cat /opt/rink/tmp/servertldstatus_${RinkName}_${RinkVerbTLD} | /usr/bin/ssh ${NS2Name}.${RinkVerbTLD} "/usr/bin/cat > /srv/sns/${RinkName}-${RinkVerbTLD}/servertldstatus"
/usr/bin/cat /opt/rink/tmp/servertldstatus_${NS1Name}_${RinkVerbTLD} > /srv/sns/${NS1Name}-${RinkVerbTLD}/servertldstatus
/usr/bin/cat /opt/rink/tmp/servertldstatus_${NS2Name}_${RinkVerbTLD} > /srv/sns/${NS2Name}-${RinkVerbTLD}/servertldstatus
/usr/bin/rm -f /opt/rink/tmp/*

## NS1
### Add slave domains for Rink
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /usr/bin/systemctl stop named
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${inkBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${emailBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${oneBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${blueBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${vipBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${redBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${kiwiBASE} -n
### Add slave domains for NS2
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${inkBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${emailBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${oneBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${blueBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${vipBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${redBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${kiwiBASE} -n
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /usr/bin/systemctl start named
if /usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /usr/bin/systemctl is-active --quiet named; then
  echo "NS1 DNS service is working, you may ignore any above 'named' error messages"
fi
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsrefreshbind

## NS2
### Add slave domains for Rink
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /usr/bin/systemctl stop named
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${inkBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${emailBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${oneBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${blueBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${vipBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${redBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${RinkName}-${RinkVerbTLD} ${RinkName}.${kiwiBASE} -n
### Add slave domains for NS1
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${inkBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${emailBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${oneBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${blueBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${vipBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${redBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${kiwiBASE} -n
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /usr/bin/systemctl start named
if /usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /usr/bin/systemctl is-active --quiet named; then
  echo "NS2 DNS service is working, you may ignore any above 'named' error messages"
fi
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} /opt/verb/serfs/inkdnsrefreshbind

## This local Rink server
/usr/bin/systemctl stop named
### Add slave domains for NS1
/opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${inkBASE} -n
/opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${emailBASE} -n
/opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${oneBASE} -n
/opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${blueBASE} -n
/opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${vipBASE} -n
/opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${redBASE} -n
/opt/verb/serfs/inkdnsaddslave ${NS1Name}-${RinkVerbTLD} ${NS1Name}.${kiwiBASE} -n
### Add slave domains for NS2
/opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${inkBASE} -n
/opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${emailBASE} -n
/opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${oneBASE} -n
/opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${blueBASE} -n
/opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${vipBASE} -n
/opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${redBASE} -n
/opt/verb/serfs/inkdnsaddslave ${NS2Name}-${RinkVerbTLD} ${NS2Name}.${kiwiBASE} -n
/usr/bin/systemctl start named
if /usr/bin/systemctl is-active --quiet named; then
  echo "The Rink DNS service is working, you may ignore any above 'named' error messages"
fi
/opt/verb/serfs/inkdnsrefreshbind

# inkDNS refresh Bind cron task
/usr/bin/ssh -T ${NS1Name}.${RinkVerbTLD} <<EOS
/usr/bin/echo '*/15 * * * * root /opt/verb/serfs/inkdnsrefreshbind' > /etc/cron.d/refreshbind
/usr/bin/chmod 0644 /etc/cron.d/refreshbind
EOS
/usr/bin/ssh -T ${NS2Name}.${RinkVerbTLD} <<EOS
/usr/bin/echo '*/15 * * * * root /opt/verb/serfs/inkdnsrefreshbind' > /etc/cron.d/refreshbind
/usr/bin/chmod 0644 /etc/cron.d/refreshbind
EOS

# Set the configured status on this rink and the NS nameservers
## Domain hosting and email allowed on the Rink for interactive webapp and verb-level domains
/usr/bin/sed -i 's/EmailAllowed=.*/EmailAllowed="YES"/' /opt/verb/conf/servernameip
/usr/bin/sed -i 's/DomHostAllowed=.*/DomHostAllowed="YES"/' /opt/verb/conf/servernameip
/usr/bin/sed -i 's/VerberType=.*/VerberType="RINK"/' /opt/verb/conf/servernameip
/usr/bin/sed -i '/RinkConfigured=.*/d' /opt/verb/conf/servernameip
/usr/bin/echo 'RinkConfigured="rink"' >> /opt/verb/conf/servernameip
## Nameservers are exclusively for DNS, not email or web hosting
/usr/bin/ssh -T ${NS1Name}.${RinkVerbTLD} <<EOS
/usr/bin/sed -i 's/EmailAllowed=.*/EmailAllowed="NO"/' /opt/verb/conf/servernameip
/usr/bin/sed -i 's/DomHostAllowed=.*/DomHostAllowed="NO"/' /opt/verb/conf/servernameip
/usr/bin/sed -i 's/VerberType=.*/VerberType="NS"/' /opt/verb/conf/servernameip
/usr/bin/sed -i '/RinkConfigured=.*/d' /opt/verb/conf/servernameip
/usr/bin/echo 'RinkConfigured="nameserver"' >> /opt/verb/conf/servernameip
EOS
/usr/bin/ssh -T ${NS2Name}.${RinkVerbTLD} <<EOS
/usr/bin/sed -i 's/EmailAllowed=.*/EmailAllowed="NO"/' /opt/verb/conf/servernameip
/usr/bin/sed -i 's/DomHostAllowed=.*/DomHostAllowed="NO"/' /opt/verb/conf/servernameip
/usr/bin/sed -i 's/VerberType=.*/VerberType="NS"/' /opt/verb/conf/servernameip
/usr/bin/sed -i '/RinkConfigured=.*/d' /opt/verb/conf/servernameip
/usr/bin/echo 'RinkConfigured="nameserver"' >> /opt/verb/conf/servernameip
EOS

# Display what the inklist file should be
/usr/bin/cat <<EOF > /opt/verb/conf/inklists/inkdnsnameservers
BaseHostNS="${RinkDomain}"
DefaultNS1="${NS1Host}.${RinkDomain}"
NameserverNS1IPv4="${NS1ip4}"
NameserverNS1IPv6="${NS1ip6}"
DefaultNS2="${NS2Host}.${RinkDomain}"
NameserverNS2IPv4="${NS2ip4}"
NameserverNS2IPv6="${NS2ip6}"
EOF

# Reboot NS servers
/usr/bin/ssh ${NS1Name}.${RinkVerbTLD} reboot
/usr/bin/ssh ${NS2Name}.${RinkVerbTLD} reboot

# Finish
/usr/bin/echo "
The inkDNS nameservers are now set. This should be updated in the public verb repo...

verb/conf/inklists/inkdnsnameservers :
"

/usr/bin/cat /opt/verb/conf/inklists/inkdnsnameservers
cp /opt/verb/conf/inklists/inkdnsnameservers /opt/rink/inkdnsnameservers

/usr/bin/echo "
###

On this rink, order of verber setup is unique:
1. reboot
2. SSH as usual
3. Install inkVmail first!
  - inkVmail installer ('serfs/installinkvmail') (With no PO or Box webmail tool setup!)
  - Ensure verb-level domains are hosted or parked across the namserver network
  - inkCert for verb domains ('ink cert do -ma' or 'serfs/inkcertdole-all-verbs')
  - Lastly, complete any setup actions for PO and Box webmail tools

Cheers!
"

# Cleanup
/usr/bin/rm -f /opt/rink/ns1done
/usr/bin/rm -f /opt/rink/ns2done
/usr/bin/rm -f /opt/rink/ns1added
/usr/bin/rm -f /opt/rink/ns2added
/usr/bin/rm -f /opt/rink/waitnsfinish
/usr/bin/echo 'LASTID="1000"' > /opt/rink/lastverbid
/usr/bin/touch /opt/rink/.configured
