#!/bin/bash
#inkVerbRunner! verb.ink

# This is the master command to add a new drive and connect it to a specific VPS, complete with all requirements

# How to use:
## ./adddrive [verb-namespace] [tld] [user] [drive-nickname] [size (in GB)] [type]

# Eg:
## ./adddrive name ink someuser twentyhard 20 hdd
## ./adddrive blink ink johnuser tensolid 10 ssd
## ./adddrive blink ink otheruser fiftygrand 50 ssd
## ./adddrive name ink johnuser rockblock 40 hdd


# Get our Rink-NS name settings
. /opt/rink/rinknames

namespace="$1"
VerbTLD="$2"
vuser="$3"
drivenickname="$4"
drivesize="$5"
drivetype="$6"

# Credential checks
if [ -z "${6}" ]; then
  /usr/bin/echo "Enter all credentials; read instructions."
  exit 5
fi

if [ ! -f "/opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb" ]; then
  /usr/bin/echo "${namespace}.${VerbTLD} does not exist! I quit."
  exit 5
fi

if [ -f "/opt/rink/conf/drives/${drivenickname}.${vuser}.drive" ]; then
  /usr/bin/echo "A drive by this nickname already exists for this user. Try another drive nickname."
  exit 5
fi

# Check verber config
if ! /usr/bin/grep -q "VerbUser=\"${vuser}\"" "/opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb"; then
  /usr/bin/echo "${namespace}.${VerbTLD} not owned by user ${vuser}! I quit."
  exit 5
else
  . /opt/rink/conf/verbers/${namespace}.${VerbTLD}.vrb
fi

# Confirm mount name for device
drivename="${drivetype}"
if /usr/bin/ls /opt/rink/conf/drives/*."${vuser}".drive > /dev/null 2>&1; then
  i=1
  while /usr/bin/grep -q DriveName=\"${drivename}\" /opt/rink/conf/drives/*."${vuser}".drive; do
    drivename="${drivetype}${i}"
    ((i++))
    if [ "${i}" = "5" ]; then
      /usr/bin/echo "Cannot have more than four of the same drive type mounted to one verber. I quit."
      exit 7
    fi
  done
fi

# Arranging
if [ "${drivetype}" = "ssd" ]; then
  typetest="block_storage_high_perf"
  typecreate="high_perf"
  if [ "${drivesize}" -lt "10" ] || [ "${drivesize}" -gt "10000" ]; then
  /usr/bin/echo "SSD must be between 10 and 10000 GB! I quit."
  exit 5
fi
elif [ "${drivetype}" = "hdd" ]; then
  typetest="block_storage_storage_opt"
  typecreate="storage_opt"
  if [ "${drivesize}" -lt "40" ] || [ "${drivesize}" -gt "40000" ]; then
    /usr/bin/echo "HDD must be between 40 and 40000 GB! I quit."
    exit 5
  fi
else
  /usr/bin/echo "Drive type must be ssh or hdd"
  exit 5
fi

# Drive region same as verber, inherited from .vrb config
driveregion="${VerbRegion}"
## Check region availability
if /usr/bin/vultr-cli regions list | /usr/bin/grep "^${driveregion}" | /usr/bin/grep -q "${typetest}"; then
  /usr/bin/echo "Creating ${drivesize} GB ${drivetype} drive in the '${driveregion}' region..."
else
  /usr/bin/echo "Verber region is ${driveregion}, but ${drivetype} is not available there. I quit."
  exit 5
fi

# Create the drive
/usr/bin/vultr-cli bs c -s=${drivesize} -b=${typecreate} -r=${driveregion} > /opt/rink/conf/drives/${drivenickname}.${vuser}.raw
e="$?"; [[ "$e" = "0" ]] || exit "$e"

# Process the output
/usr/bin/tail -n +2 /opt/rink/conf/drives/${drivenickname}.${vuser}.raw > /opt/rink/conf/drives/${drivenickname}.${vuser}.line
DriveID="$(/usr/bin/cat /opt/rink/conf/drives/${drivenickname}.${vuser}.line | /usr/bin/sed 's#[[:space:]].*##')"
/usr/bin/rm -f /opt/rink/conf/drives/${drivenickname}.${vuser}.line
/usr/bin/echo "DriveID=\"${DriveID}\"
DriveNickName=\"${drivenickname}\"
DriveVerber=\"${namespace}.${VerbTLD}\"
DriveName=\"${drivename}\"
DriveSize=\"${drivesize}\"
DriveType=\"${drivetype}\"
DriveRegion=\"${driveregion}\"" > /opt/rink/conf/drives/${drivenickname}.${vuser}.drive

. /opt/rink/conf/drives/${drivenickname}.${vuser}.drive

# Wait for the drive to be ready
/usr/bin/vultr-cli bs g ${DriveID} | /usr/bin/grep -q 'active'
driveactive="$?"
while [ "${driveactive}" != "0" ]; do
  sleep 1
  /usr/bin/vultr-cli bs g ${DriveID} | /usr/bin/grep -q 'active'
  driveactive="$?"
  ## Double-check via "pending"
  if [ "${driveactive}" = "0" ]; then
    /usr/bin/vultr-cli bs g ${DriveID} | /usr/bin/grep -q 'pending'
    if [ "$?" = "1" ]; then
      break
    else
      driveactive="1"
    fi
  fi
done

# Attach the instance
/usr/bin/vultr-cli bs a ${DriveID} -i=${VultrInstanceID}

# Find the device name in /dev/vdb etc
/usr/bin/ssh ${namespace}.${VerbTLD} "/usr/bin/ls /dev/vd*" > /opt/rink/tmp/${drivenickname}.${vuser}.drive
if /usr/bin/grep -q vdb /opt/rink/tmp/${drivenickname}.${vuser}.drive && ! /usr/bin/grep -q vdb1 /opt/rink/tmp/${drivenickname}.${vuser}.drive; then
  DriveDev="vdb"
elif /usr/bin/grep -q vdc /opt/rink/tmp/${drivenickname}.${vuser}.drive && ! /usr/bin/grep -q vdc1 /opt/rink/tmp/${drivenickname}.${vuser}.drive; then
  DriveDev="vdc"
elif /usr/bin/grep -q vdd /opt/rink/tmp/${drivenickname}.${vuser}.drive && ! /usr/bin/grep -q vdd1 /opt/rink/tmp/${drivenickname}.${vuser}.drive; then
  DriveDev="vdd"
elif /usr/bin/grep -q vde /opt/rink/tmp/${drivenickname}.${vuser}.drive && ! /usr/bin/grep -q vde1 /opt/rink/tmp/${drivenickname}.${vuser}.drive; then
  DriveDev="vde"
elif /usr/bin/grep -q vdf /opt/rink/tmp/${drivenickname}.${vuser}.drive && ! /usr/bin/grep -q vdf1 /opt/rink/tmp/${drivenickname}.${vuser}.drive; then
  DriveDev="vdf"
elif /usr/bin/grep -q vdg /opt/rink/tmp/${drivenickname}.${vuser}.drive && ! /usr/bin/grep -q vdg1 /opt/rink/tmp/${drivenickname}.${vuser}.drive; then
  DriveDev="vdg"
elif /usr/bin/grep -q vdh /opt/rink/tmp/${drivenickname}.${vuser}.drive && ! /usr/bin/grep -q vdh1 /opt/rink/tmp/${drivenickname}.${vuser}.drive; then
  DriveDev="vdh"
else
  /usr/bin/echo "Cannot have more than eight drives mounted to one verber. I quit."
  exit 7
fi 

# Record the device name in /opt/rink/conf/drives/${drivenickname}.${vuser}.drive
/usr/bin/echo "DriveDev=\"${DriveDev}\"" >> /opt/rink/conf/drives/${drivenickname}.${vuser}.drive

# Cleanup
/usr/bin/rm -f /opt/rink/tmp/${drivenickname}.${vuser}.drive

# Mount the drive on the verber
/usr/bin/ssh ${namespace}.${VerbTLD} /opt/verb/serfs/inkdriveadd ${DriveDev} ${drivename} ${drivetype}
